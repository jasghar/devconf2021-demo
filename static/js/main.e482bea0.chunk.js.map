{"version":3,"sources":["images/wknd-logo-dk.svg","images/icon-loading.svg","images/icon-close.svg","api/useGraphQL.js","components/Error.js","components/Loading.js","components/Adventures.js","components/AdventureDetail.js","App.js","index.js"],"names":["module","exports","process","REACT_APP_GRAPHQL_ENDPOINT","useGraphQL","query","useState","data","setData","errorMessage","setErrors","useEffect","window","fetch","method","headers","body","JSON","stringify","then","response","json","errors","map","error","message","join","mapErrors","catch","Error","className","this","props","Component","Loading","src","loadingIcon","alt","AdventureItem","adventurePrimaryImage","to","_path","adventureTitle","adventureTripLength","adventurePrice","allAdventuresQuery","filterQuery","activity","Adventures","setQuery","onClick","adventureList","items","adventure","index","key","Contributer","pictureReference","fullName","occupation","withRouter","contentFragmentPath","location","pathname","substring","match","url","length","adventureData","adventureByPath","item","backIcon","adventureActivity","adventureType","adventureGroupSize","adventureDifficulty","dangerouslySetInnerHTML","__html","adventureDescription","html","adventureItinerary","adventureContributor","Home","App","logo","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e482bea0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wknd-logo-dk.36593320.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-loading.200bc7ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.f227c489.svg\";","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport {useState, useEffect} from 'react';\n\nconst {REACT_APP_GRAPHQL_ENDPOINT} = process.env;\n\n/*\n    Custom React Hook to perform a GraphQL query\n    query paramter is a GraphQL query\n    environment variable REACT_APP_GRAPHQL_ENDPOINT is used to point to endpoint in AEM\n*/\nfunction useGraphQL(query) {\n\n    let [data, setData] = useState(null);\n    let [errorMessage, setErrors] = useState(null);\n\n    useEffect(() => {\n        window.fetch(\n        \"https://publish-p29613-e95589.adobeaemcloud.com/content/graphql/global/endpoint.json\",\n        {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json', \n            'Referer': \"https://jasghar.github.io\",\n            },\n            body: JSON.stringify({query}),\n        }\n        ).then(response => response.json())\n        .then(({data, errors}) => {\n            //If there are errors in the response set the error message\n            if(errors) {\n                setErrors(mapErrors(errors));\n            }\n            //Otherwise if data in the response set the data as the results\n            if(data) {\n                setData(data);\n            }\n        })\n        .catch((error) => {\n            setErrors(error);\n        });\n    }, [query]);\n\n    return {data, errorMessage}\n}\n\n/**\n * concatenate error messages into a single string.\n * @param {*} errors \n */\nfunction mapErrors(errors) {\n    return errors.map((error) => error.message).join(\",\");\n}\nexport default useGraphQL","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, {Component} from 'react';\n\nclass Error extends Component {\n\n    render() {\n        return (<div className=\"error\">\n              <span className=\"error-message\">{`Error: ${this.props.errorMessage}`}</span>\n          </div>);\n    }\n}\n\nexport default Error;","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, {Component} from 'react';\nimport loadingIcon from '../images/icon-loading.svg';\n\nclass Loading extends Component {\n\n    render() {\n        return (<div className=\"loading\">\n              <img src={loadingIcon} alt=\"Loading...\" />\n          </div>);\n    }\n}\n\nexport default Loading;","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport useGraphQL from '../api/useGraphQL';\nimport Error from './Error';\nimport Loading from './Loading';\nimport './Adventures.scss';\n\n\nfunction Adventures() {\n    \n    //Use React Hooks to set the initial GraphQL query to a variable named `query`\n    const [query, setQuery] = useState(allAdventuresQuery);\n    //Use a custom React Hook to execute the GraphQL query\n    const { data, errorMessage } = useGraphQL(query);\n\n    //If there is an error with the GraphQL query\n    if(errorMessage) return <Error errorMessage={errorMessage} />;\n\n    //If data is null then return a loading state...\n    if(!data) return <Loading />;\n    \n    return (\n        <div className=\"adventures\">\n          <button onClick={() => setQuery(allAdventuresQuery)}>All</button>\n          <button onClick={() => setQuery(filterQuery('Camping'))}>Camping</button>\n          <button onClick={() => setQuery(filterQuery('Surfing'))}>Surfing</button>\n          <ul className=\"adventure-items\">\n            {\n                //Iterate over the returned data items from the query\n                data.adventureList.items.map((adventure, index) => {\n                    return (\n                        <AdventureItem key={index} {...adventure} />\n                    );\n                })\n            }\n            </ul>\n        </div>\n    );\n}\n\n// Render individual Adventure item\nfunction AdventureItem(props) {\n    if (props.adventurePrimaryImage == null) {\n        //ignore fragments where we don't have an adventurePrimaryImage \n        return \"\";\n    }\n  return (\n        <li className=\"adventure-item\">\n          <Link to={`/adventure:${props._path}`}>\n            <img className=\"adventure-item-image\" src={props.adventurePrimaryImage._path} \n                 alt={props.adventureTitle}/>\n          </Link>\n          <div className=\"adventure-item-length-price\">\n            <div className=\"adventure-item-length\">{props.adventureTripLength}</div>\n            <div className=\"adventure-item-price\">{props.adventurePrice}</div>\n          </div>\n          <div className=\"adventure-item-title\">{props.adventureTitle}</div>\n      </li>\n      );\n}\n\n/**\n * Query for all Adventures\n */\nconst allAdventuresQuery = `\n  {\n    adventureList {\n      items {\n        _path\n        adventureTitle\n        adventurePrice\n        adventureTripLength\n        adventurePrimaryImage {\n          ... on ImageRef {\n            _path\n            mimeType\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Returns a query for Adventures filtered by activity\n */\nfunction filterQuery(activity) {\n  return `\n    {\n      adventureList (filter: {\n        adventureActivity: {\n          _expressions: [\n            {\n              value: \"${activity}\"\n            }\n          ]\n        }\n      }){\n        items {\n          _path\n        adventureTitle\n        adventurePrice\n        adventureTripLength\n        adventurePrimaryImage {\n          ... on ImageRef {\n            _path\n            mimeType\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n  `;\n}\n\n\nexport default Adventures;","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React from 'react';\nimport { withRouter, Link} from \"react-router-dom\";\nimport useGraphQL from '../api/useGraphQL';\nimport backIcon from '../images/icon-close.svg';\nimport Error from './Error';\nimport Loading from './Loading';\nimport './AdventureDetail.scss';\n\n\nfunction AdventureDetail(props) {\n\n    //parse the content fragment from the url\n    const contentFragmentPath = props.location.pathname.substring(props.match.url.length);\n\n    //Use a custom React Hook to execute the GraphQL query\n    const { data, errorMessage } = useGraphQL(adventureDetailQuery(contentFragmentPath));\n\n    //If there is an error with the GraphQL query\n    if(errorMessage) return <Error errorMessage={errorMessage} />;\n\n    //If data is null then return a loading icon...\n    if(!data) return <Loading />;\n\n    //Set adventureData variable based on graphQL response\n    let adventureData = data.adventureByPath.item;\n    return (\n        <div className=\"adventure-detail\">\n          <Link className=\"adventure-detail-close-button\" to={\"/Home\"}>\n            <img className=\"Backbutton-icon\" src={backIcon} alt=\"Return\" />\n          </Link>\n          <h1 className=\"adventure-detail-title\">{adventureData.adventureTitle}</h1>\n          <div className=\"adventure-detail-info\">\n            <div className=\"adventure-detail-info-label\">Activity</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureActivity}</div>\n            <div className=\"adventure-detail-info-label\">Type</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureType}</div>\n            <div className=\"adventure-detail-info-label\">Trip Length</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureTripLength}</div>\n            <div className=\"adventure-detail-info-label\">Group Size</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureGroupSize}</div>\n            <div className=\"adventure-detail-info-label\">Difficulty</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventureDifficulty}</div>\n            <div className=\"adventure-detail-info-label\">Price</div>\n            <div className=\"adventure-detail-info-description\">{adventureData.adventurePrice}</div>\n          </div>\n          <div className=\"adventure-detail-content\">\n            <img className=\"adventure-detail-primaryimage\"\n                 src={adventureData.adventurePrimaryImage._path} alt={adventureData.adventureTitle}/>\n            <div dangerouslySetInnerHTML={{__html: adventureData.adventureDescription.html}}></div>\n            <h2>Itinerary</h2>\n            <hr />\n            <div className=\"adventure-detail-itinerary\"\n                 dangerouslySetInnerHTML={{__html: adventureData.adventureItinerary.html}}></div>\n            <Contributer {...adventureData.adventureContributor} />\n          </div>\n\n        </div>\n    );\n}\n\nfunction adventureDetailQuery(_path) {\n  return `{\n    adventureByPath (_path: \"${_path}\") {\n      item {\n        _path\n          adventureTitle\n          adventureActivity\n          adventureType\n          adventurePrice\n          adventureTripLength\n          adventureGroupSize\n          adventureDifficulty\n          adventurePrice\n          adventurePrimaryImage {\n            ... on ImageRef {\n              _path\n              mimeType\n              width\n              height\n            }\n          }\n          adventureDescription {\n            html\n          }\n          adventureItinerary {\n            html\n          }\n      }\n    }\n  }\n  `;\n}\n\nfunction Contributer(props) {\n\n  if(!props) {\n    return null;\n  }\n  let pictureReference = null;\n  if(props.pictureReference) {\n     pictureReference =  <img className=\"contributor-image\" src={props.pictureReference._path} alt={props.fullName} />\n  }\n\n  return (\n    <div className=\"contributor\">\n      <hr className=\"contributor-separator\" />\n      {pictureReference}\n      <h3 className=\"contributor-name\">{props.fullName}</h3>\n      <h4 className=\"contributor-occupation\">{props.occupation}</h4>\n    </div>);\n}\n\n\nexport default withRouter(AdventureDetail);\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport logo from './images/wknd-logo-dk.svg';\nimport Adventures from './components/Adventures';\nimport AdventureDetail from './components/AdventureDetail';\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <img src={logo} className=\"logo\" alt=\"WKND Logo\"/>\n          <hr />\n        </header>\n      <Switch>\n        <Route path='/adventure:path'>\n          <AdventureDetail />\n        </Route>  \n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n      </div>\n    </Router>   \n  );\n}\n\n/***\n * Displays a grid of current adventures\n */\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <h2>Current Adventures</h2>\n      <Adventures />\n  </div>\n  );\n}\n\n\nexport default App;\n","/*\nCopyright 2020 Adobe\nAll Rights Reserved.\n\nNOTICE: Adobe permits you to use, modify, and distribute this file in\naccordance with the terms of the Adobe license agreement accompanying\nit.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}